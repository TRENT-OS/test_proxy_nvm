/* 
 * Copyright (C) 2020-2024, HENSOLDT Cyber GmbH
 * 
 * SPDX-License-Identifier: GPL-2.0-or-later
 *
 * For commercial licensing, contact: info.cyber@hensoldt.net
 */

/** @cond SKIP_IMPORTS */
import <std_connector.camkes>;

import "components/ProxyNVM_Tester/ProxyNVM_Tester.camkes";
/** @endcond */

#include "system_config.h"

#include "ChanMux/ChanMux_UART.camkes"
ChanMux_UART_COMPONENT_DEFINE(
    ChanMux_UART,
    tester1, chan,
    tester2, chan
)

/** @hideinitializer */
assembly {
    composition {

        //----------------------------------------------------------------------
        // ChanMux + UART
        component ChanMux_UART chanMux_UART;
        component UART_CHANMUX uart;

        ChanMux_UART_INSTANCE_CONNECT(
            chanMux_UART,
            uart
        )

        //----------------------------------------------------------------------
        // ProxyNVM_Tester
        component   ProxyNVM_Tester    tester1;
        component   ProxyNVM_Tester    tester2;

        ChanMux_UART_INSTANCE_CONNECT_CLIENT(
            chanMux_UART,
            tester1, chan
        )
        ChanMux_UART_INSTANCE_CONNECT_CLIENT(
            chanMux_UART,
            tester2, chan
        )
    }
    configuration {
        ChanMux_UART_CLIENT_ASSIGN_BADGES(
            tester1.chanMux_Rpc,
            tester2.chanMux_Rpc
        )

        tester1.memorySizeBytes     = 36 * 1024 * 1024;
        tester2.memorySizeBytes     = 128 * 1024;

        uart.priority         = 252;
        chanMux_UART.priority = 253;
    }
}

