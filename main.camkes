import <std_connector.camkes>;

import "components/ProxyNVM_Tester1/ProxyNVM_Tester1.camkes";
import "components/ProxyNVM_Tester2/ProxyNVM_Tester2.camkes";

#include "system_config.h"

#include "UART/Uart.camkes"
DECLARE_COMPONENT_UART(UART)

#define CHANMUX_COMPONENT_NAME  ChanMux
#define CHANMUX_UPPER_INTERFACES "components/ChanMux/ChanMux_upper_interface.camkes"
#include "ChanMux/ChanMux.camkes"


assembly {
    composition {

        //----------------------------------------------------------------------
        // UART

        DECLARE_AND_CONNECT_INSTANCE_UART(
            UART, uartDrv)

        //----------------------------------------------------------------------
        // ChanMux

        DECLARE_AND_CONNECT_INSTANCE_CHANMUX_TO_UART(ChanMux, chanMux, uartDrv)

        //----------------------------------------------------------------------
        // ProxyNVM_Tester1

        component   ProxyNVM_Tester1    tester1;
        CHANMUX_INSTANCE_CONNECT_INTERFACE(chanMux, tester1)
        CHANMUX_INSTANCE_CONNECT_CHANNEL(chanMux, tester1, chan)

        //----------------------------------------------------------------------
        // ProxyNVM_Tester2

        component   ProxyNVM_Tester2    tester2;
        CHANMUX_INSTANCE_CONNECT_INTERFACE(chanMux, tester2)
        CHANMUX_INSTANCE_CONNECT_CHANNEL(chanMux, tester2, chan)
    }
    configuration {
        CONFIGURE_INSTANCE_UART(
            uartDrv,
            CFG_CHANMUX_DEFAULT_UART_PHYS_ADDR,
            CFG_CHANMUX_DEFAULT_UART_INTR)

        // assign endpoint badges for n:1 RPC interface of ChanMUX. The generic
        // naming scheme is <component>.<interface>_attributes = <badge ID>
        CHANMUX_ASSIGN_CLIENT_BADGE(chanMux, tester1, CHANMUX_ID_TESTER_1)
        CHANMUX_ASSIGN_CLIENT_BADGE(chanMux, tester2, CHANMUX_ID_TESTER_2)
    }
}

