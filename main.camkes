import <std_connector.camkes>;

import "components/ProxyNVM_Tester1/ProxyNVM_Tester1.camkes";
import "components/ProxyNVM_Tester2/ProxyNVM_Tester2.camkes";

#include "system_config.h"

#include "UART/uart.camkes"
DECLARE_COMPONENT_UART(UART)

#define CHANMUX_COMPONENT_NAME  ChanMux
#define CHANMUX_UPPER_INTERFACES "components/ChanMux/ChanMux_upper_interface.camkes"
#include "ChanMux/ChanMux.camkes"


assembly {
    composition {

        //----------------------------------------------------------------------
        // UART

        DECLARE_AND_CONNECT_INSTANCE_UART(
            UART, uartDrv)

        //----------------------------------------------------------------------
        // ChanMux

        DECLARE_AND_CONNECT_INSTANCE_CHANMUX(
            ChanMux, chanMux,
            uartDrv.UartDrv, uartDrv.inputDataPort,
            uartDrv.Output)

        //----------------------------------------------------------------------
        // ProxyNVM_Tester1

        component   ProxyNVM_Tester1   tester1;
        connection  seL4RPCCall        tester1_chanmux     (from tester1.chanMux_rpc, to chanMux.chanMux_rpc);
        connection  seL4SharedData     dataConnection      (from tester1.chanMux_port, to chanMux.proxyNVM_Tester1_port);
        connection  seL4Notification   dataAvailableLan    (from chanMux.proxyNVM_Tester1_event_hasData, to tester1.chanMux_event_hasData);


        //----------------------------------------------------------------------
        // ProxyNVM_Tester2

        component   ProxyNVM_Tester2   tester2;
        connection  seL4RPCCall        tester2_chanmux     (from tester2.chanMux_rpc, to chanMux.chanMux_rpc);
        connection  seL4SharedData     dataConnection2     (from tester2.chanMux_port, to chanMux.proxyNVM_Tester2_port);
        connection  seL4Notification   dataAvailableLan2   (from chanMux.proxyNVM_Tester2_event_hasData, to tester2.chanMux_event_hasData);

    }
    configuration {
        CONFIGURE_INSTANCE_UART(
            uartDrv,
            CFG_CHANMUX_DEFAULT_UART_PHYS_ADDR,
            CFG_CHANMUX_DEFAULT_UART_INTR)

        // assign endpoint badges for n:1 RPC interface of ChanMUX. The generic
        // naming scheme is <component>.<interface>_attributes = <badge ID>
        tester1.chanMux_rpc_attributes = CHANMUX_ID_TESTER_1;
        tester2.chanMux_rpc_attributes = CHANMUX_ID_TESTER_2;

    }
}

