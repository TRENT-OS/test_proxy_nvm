/* Copyright (C) 2020, Hensoldt Cyber GmbH */

/** @cond SKIP_IMPORTS */
import <std_connector.camkes>;

import "components/ProxyNVM_Tester/ProxyNVM_Tester.camkes";
/** @endcond */

#include "system_config.h"

#include "UART/Uart.camkes"
DECLARE_COMPONENT_UART(UART)

#include "ChanMux/ChanMux.camkes"
ChanMux_DEFINE_COMPONENT(ChanMux,
        tester1, chan,
        tester2, chan)

/** @hideinitializer */
assembly {
    composition {

        //----------------------------------------------------------------------
        // UART

        DECLARE_AND_CONNECT_INSTANCE_UART(
            UART, uartDrv)

        //----------------------------------------------------------------------
        // ChanMux

        ChanMux_DECLARE_AND_CONNECT_INSTANCE_TO_UART(ChanMux, chanMux, uartDrv)

        //----------------------------------------------------------------------
        // ProxyNVM_Tester

        component   ProxyNVM_Tester    tester1;
        ChanMux_INSTANCE_CONNECT_INTERFACE(chanMux, tester1)
        ChanMux_INSTANCE_CONNECT_CHANNEL(chanMux, tester1, chan)

        //----------------------------------------------------------------------
        // ProxyNVM_Tester

        component   ProxyNVM_Tester    tester2;
        ChanMux_INSTANCE_CONNECT_INTERFACE(chanMux, tester2)
        ChanMux_INSTANCE_CONNECT_CHANNEL(chanMux, tester2, chan)
    }
    configuration {
        CONFIGURE_INSTANCE_UART(
            uartDrv,
            CFG_CHANMUX_DEFAULT_UART_PHYS_ADDR,
            CFG_CHANMUX_DEFAULT_UART_INTR)

        // assign endpoint badges for n:1 RPC interface of ChanMUX. The generic
        // naming scheme is <component>.<interface>_attributes = <badge ID>
        ChanMux_ASSIGN_CLIENT_BADGE(chanMux, tester1, CHANMUX_ID_TESTER_1)
        ChanMux_ASSIGN_CLIENT_BADGE(chanMux, tester2, CHANMUX_ID_TESTER_2)

        tester1.memorySizeBytes     = 36 * 1024 * 1024;
        tester2.memorySizeBytes     = 128 * 1024;
    }
}

